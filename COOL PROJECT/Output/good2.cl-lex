1
CLASS
class
1
TYPEID
Main
1
OBJECTID
inherits
1
TYPEID
IO
1
LBRACE
{
2
OBJECTID
pal
2
LPAREN
(
2
OBJECTID
s
2
COLON
:
2
TYPEID
String
2
RPAREN
)
2
COLON
:
2
TYPEID
Bool
2
LBRACE
{
3
IF
if
3
OBJECTID
s
3
DOT
.
3
OBJECTID
length
3
LPAREN
(
3
RPAREN
)
3
EQUALS
=
3
INT_CONST
0
4
THEN
then
4
BOOL_CONST
true
5
ELSE
else
5
IF
if
5
OBJECTID
s
5
DOT
.
5
OBJECTID
length
5
LPAREN
(
5
RPAREN
)
5
EQUALS
=
5
INT_CONST
1
6
THEN
then
6
BOOL_CONST
true
7
ELSE
else
7
IF
if
7
OBJECTID
s
7
DOT
.
7
OBJECTID
substr
7
LPAREN
(
7
INT_CONST
0
7
COMMA
,
7
INT_CONST
1
7
RPAREN
)
7
EQUALS
=
7
OBJECTID
s
7
DOT
.
7
OBJECTID
substr
7
LPAREN
(
7
OBJECTID
s
7
DOT
.
7
OBJECTID
length
7
LPAREN
(
7
RPAREN
)
7
MINUS
-
7
INT_CONST
1
7
COMMA
,
7
INT_CONST
1
7
RPAREN
)
8
THEN
then
8
OBJECTID
pal
8
LPAREN
(
8
OBJECTID
s
8
DOT
.
8
OBJECTID
substr
8
LPAREN
(
8
INT_CONST
1
8
COMMA
,
8
OBJECTID
s
8
DOT
.
8
OBJECTID
length
8
LPAREN
(
8
RPAREN
)
8
MINUS
-
8
INT_CONST
2
8
RPAREN
)
8
RPAREN
)
9
ELSE
else
9
BOOL_CONST
false
10
FI
fi
10
FI
fi
10
FI
fi
11
RBRACE
}
11
SEMICOLON
;
13
OBJECTID
main
13
LPAREN
(
13
RPAREN
)
13
COLON
:
13
TYPEID
SELF_TYPE
13
LBRACE
{
14
OBJECTID
out_string
14
LPAREN
(
14
STRING
"enter a string ? "
14
RPAREN
)
14
SEMICOLON
;
15
IF
if
15
OBJECTID
pal
15
LPAREN
(
15
OBJECTID
in_string
15
LPAREN
(
15
RPAREN
)
15
RPAREN
)
16
THEN
then
16
OBJECTID
out_string
16
LPAREN
(
16
STRING
"that was a palindrome\n"
16
RPAREN
)
17
ELSE
else
17
OBJECTID
out_string
17
LPAREN
(
17
STRING
"that was not a palindrome\n"
17
RPAREN
)
18
FI
fi
18
SEMICOLON
;
19
RBRACE
}
19
SEMICOLON
;
20
RBRACE
}
20
SEMICOLON
;
